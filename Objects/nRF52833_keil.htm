<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\nRF52833_keil.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\nRF52833_keil.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Thu Oct 12 14:10:38 2023
<BR><P>
<H3>Maximum Stack Usage =        280 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; UART_INIT &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[3]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">NMI_Handler</a><BR>
 <LI><a href="#[4]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">HardFault_Handler</a><BR>
 <LI><a href="#[5]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[6]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">BusFault_Handler</a><BR>
 <LI><a href="#[7]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">UsageFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">DebugMon_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[b]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SysTick_Handler</a><BR>
 <LI><a href="#[1b]">CCM_AAR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">CCM_AAR_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6]">BusFault_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1b]">CCM_AAR_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1f]">COMP_LPCOMP_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[9]">DebugMon_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1a]">ECB_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[30]">FPU_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[12]">GPIOTE_IRQHandler</a> from nrfx_gpiote.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[4]">HardFault_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2f]">I2S_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2a]">MWU_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[5]">MemoryManagement_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[11]">NFCT_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[3]">NMI_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[29]">PDM_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[c]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[28]">PWM0_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2b]">PWM1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2c]">PWM2_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[33]">PWM3_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1e]">QDEC_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[d]">RADIO_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[19]">RNG_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[17]">RTC0_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1d]">RTC1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2e]">RTC2_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2]">Reset_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[13]">SAADC_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[f]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</a> from nrfx_spim.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler) referenced from nrfx_spim.o(.constdata)
 <LI><a href="#[f]">SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</a> from nrfx_spim.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[10]">SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[2d]">SPIM2_SPIS2_SPI2_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[34]">SPIM3_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[20]">SWI0_EGU0_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[21]">SWI1_EGU1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[22]">SWI2_EGU2_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[23]">SWI3_EGU3_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[24]">SWI4_EGU4_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[25]">SWI5_EGU5_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[35]">SystemInit</a> from system_nrf52.o(i.SystemInit) referenced from arm_startup_nrf52833.o(.text)
 <LI><a href="#[18]">TEMP_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[14]">TIMER0_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[15]">TIMER1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[16]">TIMER2_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[26]">TIMER3_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[27]">TIMER4_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[e]">UARTE0_UART0_IRQHandler</a> from nrfx_prs.o(i.UARTE0_UART0_IRQHandler) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[32]">UARTE1_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[31]">USBD_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[7]">UsageFault_Handler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[1c]">WDT_IRQHandler</a> from arm_startup_nrf52833.o(.text) referenced from arm_startup_nrf52833.o(RESET)
 <LI><a href="#[41]">__main</a> from __main.o(!!!main) referenced from arm_startup_nrf52833.o(.text)
 <LI><a href="#[38]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[37]">fputc</a> from retarget.o(i.fputc) referenced from _printf_char_file.o(.text)
 <LI><a href="#[3f]">nrfx_uart_0_irq_handler</a> from nrfx_uart.o(i.nrfx_uart_0_irq_handler) referenced from nrfx_uart.o(.constdata)
 <LI><a href="#[40]">nrfx_uarte_0_irq_handler</a> from nrfx_uarte.o(i.nrfx_uarte_0_irq_handler) referenced from nrfx_uarte.o(.constdata)
 <LI><a href="#[39]">spi_event_handler</a> from global.o(i.spi_event_handler) referenced from global.o(i.SPI_INIT)
 <LI><a href="#[3c]">spim_evt_handler</a> from nrf_drv_spi.o(i.spim_evt_handler) referenced from nrf_drv_spi.o(i.nrf_drv_spi_init)
 <LI><a href="#[3a]">uart_error_handle</a> from global.o(i.uart_error_handle) referenced from global.o(i.UART_INIT)
 <LI><a href="#[3b]">uart_event_handler</a> from app_uart_fifo.o(i.uart_event_handler) referenced from app_uart_fifo.o(i.app_uart_init)
 <LI><a href="#[3e]">uart_evt_handler</a> from nrf_drv_uart.o(i.uart_evt_handler) referenced from nrf_drv_uart.o(i.nrf_drv_uart_init)
 <LI><a href="#[3d]">uarte_evt_handler</a> from nrf_drv_uart.o(i.uarte_evt_handler) referenced from nrf_drv_uart.o(i.nrf_drv_uart_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[41]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[42]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[44]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[a9]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[aa]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[45]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[ab]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[4b]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[46]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[ac]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[ad]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[ae]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[af]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b0]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b1]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b2]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[be]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[50]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c0]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[c1]"></a>__rt_lib_shutdown_fini_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[c2]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[c3]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))

<P><STRONG><a name="[c4]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))

<P><STRONG><a name="[c5]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[c6]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[43]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[c8]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[48]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4a]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[c9]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[4c]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; UART_INIT &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[ca]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[5a]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4f]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[cb]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[51]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[2]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CCM_AAR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>COMP_LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>MWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>NFCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>PDM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>PWM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>PWM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>RTC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SAADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPIM2_SPIS2_SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>SPIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SWI0_EGU0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SWI1_EGU1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SWI2_EGU2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SWI3_EGU3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SWI4_EGU4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>SWI5_EGU5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>UARTE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, arm_startup_nrf52833.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[53]"></a>__2printf</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INIT
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[cf]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>_printf_char_file</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[55]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[56]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ferror.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[49]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[57]"></a>__printf</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, __printf_nopercent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __printf
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[4e]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[d2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[d4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, nrfx_gpiote.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GPIOTE_IRQHandler &rArr; port_event_handle &rArr; nrf_gpio_latches_read_and_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_is_set
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpiote_event_clear
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_latches_read_and_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>GPIO_INIT</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, global.o(i.GPIO_INIT))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, nrfx_spim.o(i.SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler &rArr; nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_spim_event_check
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Address Reference Count : 2]<UL><LI> nrfx_spim.o(.constdata)
<LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI_INIT</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, global.o(i.SPI_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SPI_INIT &rArr; nrf_drv_spi_init &rArr; nrfx_spim_init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_spi_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>SystemInit</STRONG> (Thumb, 278 bytes, Stack size 8 bytes, system_nrf52.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>UARTE0_UART0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nrfx_prs.o(i.UARTE0_UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf52833.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART_INIT</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, global.o(i.UART_INIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = UART_INIT &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>app_error_fault_handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app_error_weak.o(i.app_error_fault_handler))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>

<P><STRONG><a name="[67]"></a>app_error_handler_bare</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app_error.o(i.app_error_handler_bare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_fault_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_error_handle
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INIT
</UL>

<P><STRONG><a name="[69]"></a>app_fifo_get</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_fifo.o(i.app_fifo_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_fifo_get
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_get
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_event_handler
</UL>

<P><STRONG><a name="[6d]"></a>app_fifo_init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_fifo.o(i.app_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[6b]"></a>app_fifo_put</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_fifo.o(i.app_fifo_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_fifo_put
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fifo_put
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_event_handler
</UL>

<P><STRONG><a name="[66]"></a>app_uart_init</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, app_uart_fifo.o(i.app_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_uart_init &rArr; nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INIT
</UL>

<P><STRONG><a name="[70]"></a>app_uart_put</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, app_uart_fifo.o(i.app_uart_put))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrfx_uart_tx &rArr; tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx_in_progress
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx_in_progress
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[74]"></a>app_util_critical_region_enter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_enter))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_disable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>

<P><STRONG><a name="[76]"></a>app_util_critical_region_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_critical_region_exit))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_enable_irq
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>

<P><STRONG><a name="[75]"></a>app_util_disable_irq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_disable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
</UL>

<P><STRONG><a name="[77]"></a>app_util_enable_irq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, app_util_platform.o(i.app_util_enable_irq))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
</UL>

<P><STRONG><a name="[37]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, retarget.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fputc &rArr; app_uart_put &rArr; nrf_drv_uart_tx &rArr; nrfx_uart_tx &rArr; tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = main &rArr; UART_INIT &rArr; app_uart_init &rArr; nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_xfer
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INIT
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_INIT
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INIT
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[63]"></a>nrf_drv_spi_init</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, nrf_drv_spi.o(i.nrf_drv_spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = nrf_drv_spi_init &rArr; nrfx_spim_init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_INIT
</UL>

<P><STRONG><a name="[6e]"></a>nrf_drv_uart_init</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, nrf_drv_uart.o(i.nrf_drv_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nrf_drv_uart_init &rArr; nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
</UL>

<P><STRONG><a name="[94]"></a>nrfx_prs_acquire</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, nrfx_prs.o(i.nrfx_prs_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrfx_prs_acquire
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_exit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_util_critical_region_enter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prs_box_get
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>

<P><STRONG><a name="[84]"></a>nrfx_spim_init</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, nrfx_spim.o(i.nrfx_spim_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrfx_spim_init &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_spi_init
</UL>

<P><STRONG><a name="[83]"></a>nrfx_spim_xfer</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, nrfx_spim.o(i.nrfx_spim_xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrfx_spim_xfer &rArr; spim_xfer &rArr; nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spim_xfer
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>nrfx_uart_0_irq_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrfx_uart.o(i.nrfx_uart_0_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrfx_uart_0_irq_handler &rArr; uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrfx_uart.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>nrfx_uart_init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, nrfx_uart.o(i.nrfx_uart_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrfx_uart_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[88]"></a>nrfx_uart_rx</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, nrfx_uart.o(i.nrfx_uart_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrfx_uart_rx &rArr; rx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[8a]"></a>nrfx_uart_tx</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, nrfx_uart.o(i.nrfx_uart_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrfx_uart_tx &rArr; tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx_in_progress
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>

<P><STRONG><a name="[72]"></a>nrfx_uart_tx_in_progress</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, nrfx_uart.o(i.nrfx_uart_tx_in_progress))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx
</UL>

<P><STRONG><a name="[40]"></a>nrfx_uarte_0_irq_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrfx_uarte.o(i.nrfx_uarte_0_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = nrfx_uarte_0_irq_handler &rArr; uarte_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrfx_uarte.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>nrfx_uarte_init</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, nrfx_uarte.o(i.nrfx_uarte_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = nrfx_uarte_init &rArr; apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupts_enable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_init
</UL>

<P><STRONG><a name="[87]"></a>nrfx_uarte_rx</STRONG> (Thumb, 256 bytes, Stack size 40 bytes, nrfx_uarte.o(i.nrfx_uarte_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nrfx_uarte_rx &rArr; nrf_uarte_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_is_in_ram
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_clear
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
</UL>

<P><STRONG><a name="[89]"></a>nrfx_uarte_tx</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, nrfx_uarte.o(i.nrfx_uarte_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrfx_uarte_tx &rArr; nrf_uarte_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx_in_progress
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_is_in_ram
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_clear
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
</UL>

<P><STRONG><a name="[71]"></a>nrfx_uarte_tx_in_progress</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrfx_uarte.o(i.nrfx_uarte_tx_in_progress))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx
</UL>

<P><STRONG><a name="[39]"></a>spi_event_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, global.o(i.spi_event_handler))
<BR>[Address Reference Count : 1]<UL><LI> global.o(i.SPI_INIT)
</UL>
<P><STRONG><a name="[3a]"></a>uart_error_handle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, global.o(i.uart_error_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_error_handle &rArr; app_error_handler_bare
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler_bare
</UL>
<BR>[Address Reference Count : 1]<UL><LI> global.o(i.UART_INIT)
</UL>
<P><STRONG><a name="[47]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[d7]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[d8]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3e]"></a>uart_evt_handler</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.uart_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_drv_uart.o(i.nrf_drv_uart_init)
</UL>
<P><STRONG><a name="[3d]"></a>uarte_evt_handler</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, nrf_drv_uart.o(i.uarte_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uarte_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_drv_uart.o(i.nrf_drv_uart_init)
</UL>
<P><STRONG><a name="[a2]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrfx_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
</UL>

<P><STRONG><a name="[a0]"></a>nrf_bitmask_bit_is_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrfx_gpiote.o(i.nrf_bitmask_bit_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
</UL>

<P><STRONG><a name="[92]"></a>nrf_gpio_cfg_sense_set</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, nrfx_gpiote.o(i.nrf_gpio_cfg_sense_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_gpio_cfg_sense_set
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
</UL>

<P><STRONG><a name="[5d]"></a>nrf_gpio_latches_read_and_clear</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, nrfx_gpiote.o(i.nrf_gpio_latches_read_and_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = nrf_gpio_latches_read_and_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[93]"></a>nrf_gpio_pin_port_decode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrfx_gpiote.o(i.nrf_gpio_pin_port_decode))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
</UL>

<P><STRONG><a name="[5c]"></a>nrf_gpiote_event_clear</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrfx_gpiote.o(i.nrf_gpiote_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpiote_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>nrf_gpiote_event_is_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrfx_gpiote.o(i.nrf_gpiote_event_is_set))
<BR><BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>port_event_handle</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, nrfx_gpiote.o(i.port_event_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = port_event_handle &rArr; nrf_gpio_latches_read_and_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_handler_polarity_get
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_latches_read_and_clear
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_set
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_bitmask_bit_is_set
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>port_handler_polarity_get</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrfx_gpiote.o(i.port_handler_polarity_get))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;port_event_handle
</UL>

<P><STRONG><a name="[95]"></a>prs_box_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrfx_prs.o(i.prs_box_get))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_prs_acquire
</UL>

<P><STRONG><a name="[78]"></a>apply_config</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, nrfx_uart.o(i.apply_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_init
</UL>

<P><STRONG><a name="[8b]"></a>nrf_gpio_cfg</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, nrfx_uart.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>

<P><STRONG><a name="[7b]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nrfx_uart.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[7a]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, nrfx_uart.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[8c]"></a>nrf_gpio_pin_port_decode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrfx_uart.o(i.nrf_gpio_pin_port_decode))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>

<P><STRONG><a name="[79]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrfx_uart.o(i.nrf_gpio_pin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[9a]"></a>nrf_uart_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrfx_uart.o(i.nrf_uart_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_rx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[98]"></a>nrf_uart_event_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrfx_uart.o(i.nrf_uart_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_rx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_enable
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
</UL>

<P><STRONG><a name="[a4]"></a>nrf_uart_int_enable_check</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrfx_uart.o(i.nrf_uart_int_enable_check))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[9b]"></a>rx_byte</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, nrfx_uart.o(i.rx_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_rx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[a5]"></a>rx_done_event</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, nrfx_uart.o(i.rx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[99]"></a>rx_enable</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, nrfx_uart.o(i.rx_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rx_enable &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_rx
</UL>

<P><STRONG><a name="[9c]"></a>tx_byte</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, nrfx_uart.o(i.tx_byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[a6]"></a>tx_done_event</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, nrfx_uart.o(i.tx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_irq_handler
</UL>

<P><STRONG><a name="[97]"></a>uart_irq_handler</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, nrfx_uart.o(i.uart_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uart_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_byte
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_byte
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_int_enable_check
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_clear
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uart_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_0_irq_handler
</UL>

<P><STRONG><a name="[7c]"></a>apply_config</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, nrfx_uarte.o(i.apply_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = apply_config &rArr; nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_init
</UL>

<P><STRONG><a name="[80]"></a>interrupts_enable</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, nrfx_uarte.o(i.interrupts_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = interrupts_enable &rArr; nrf_uarte_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_init
</UL>

<P><STRONG><a name="[8d]"></a>nrf_gpio_cfg</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, nrfx_uarte.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_input
</UL>

<P><STRONG><a name="[7f]"></a>nrf_gpio_cfg_input</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, nrfx_uarte.o(i.nrf_gpio_cfg_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf_gpio_cfg_input &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[7e]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, nrfx_uarte.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[8e]"></a>nrf_gpio_pin_port_decode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrfx_uarte.o(i.nrf_gpio_pin_port_decode))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>

<P><STRONG><a name="[7d]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrfx_uarte.o(i.nrf_gpio_pin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apply_config
</UL>

<P><STRONG><a name="[9f]"></a>nrf_uarte_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrfx_uarte.o(i.nrf_uarte_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_rx
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
</UL>

<P><STRONG><a name="[81]"></a>nrf_uarte_event_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, nrfx_uarte.o(i.nrf_uarte_event_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_uarte_event_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_rx
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;interrupts_enable
</UL>

<P><STRONG><a name="[9e]"></a>nrfx_is_in_ram</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrfx_uarte.o(i.nrfx_is_in_ram))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_rx
</UL>

<P><STRONG><a name="[a7]"></a>rx_done_event</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, nrfx_uarte.o(i.rx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
</UL>

<P><STRONG><a name="[a8]"></a>tx_done_event</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, nrfx_uarte.o(i.tx_done_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tx_done_event
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uarte_irq_handler
</UL>

<P><STRONG><a name="[9d]"></a>uarte_irq_handler</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, nrfx_uarte.o(i.uarte_irq_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = uarte_irq_handler &rArr; tx_done_event
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_done_event
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_done_event
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_clear
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_uarte_event_check
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_0_irq_handler
</UL>

<P><STRONG><a name="[3c]"></a>spim_evt_handler</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, nrf_drv_spi.o(i.spim_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spim_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nrf_drv_spi.o(i.nrf_drv_spi_init)
</UL>
<P><STRONG><a name="[8f]"></a>nrf_gpio_cfg</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, nrfx_spim.o(i.nrf_gpio_cfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_output
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>

<P><STRONG><a name="[91]"></a>nrf_gpio_cfg_output</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, nrfx_spim.o(i.nrf_gpio_cfg_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = nrf_gpio_cfg_output &rArr; nrf_gpio_cfg
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>

<P><STRONG><a name="[60]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrfx_spim.o(i.nrf_gpio_pin_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_pin_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_xfer
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spim_xfer
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>

<P><STRONG><a name="[90]"></a>nrf_gpio_pin_port_decode</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrfx_spim.o(i.nrf_gpio_pin_port_decode))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg
</UL>

<P><STRONG><a name="[61]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrfx_spim.o(i.nrf_gpio_pin_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_port_decode
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_xfer
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spim_xfer
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_init
</UL>

<P><STRONG><a name="[5f]"></a>nrf_spim_event_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrfx_spim.o(i.nrf_spim_event_check))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0_IRQHandler
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spim_xfer
</UL>

<P><STRONG><a name="[a3]"></a>nrfx_is_in_ram</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrfx_spim.o(i.nrfx_is_in_ram))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spim_xfer
</UL>

<P><STRONG><a name="[96]"></a>spim_xfer</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, nrfx_spim.o(i.spim_xfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spim_xfer &rArr; nrf_gpio_pin_set
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_is_in_ram
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_spim_event_check
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_spim_xfer
</UL>

<P><STRONG><a name="[6a]"></a>fifo_get</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_fifo.o(i.fifo_get))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
</UL>

<P><STRONG><a name="[6c]"></a>fifo_put</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, app_fifo.o(i.fifo_put))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
</UL>

<P><STRONG><a name="[6f]"></a>nrf_drv_uart_rx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_uart_fifo.o(i.nrf_drv_uart_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrf_drv_uart_rx &rArr; nrfx_uart_rx &rArr; rx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_rx
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_rx
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_init
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_event_handler
</UL>

<P><STRONG><a name="[73]"></a>nrf_drv_uart_tx</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, app_uart_fifo.o(i.nrf_drv_uart_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = nrf_drv_uart_tx &rArr; nrfx_uart_tx &rArr; tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uarte_tx
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrfx_uart_tx
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_uart_put
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_event_handler
</UL>

<P><STRONG><a name="[3b]"></a>uart_event_handler</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, app_uart_fifo.o(i.uart_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = uart_event_handler &rArr; nrf_drv_uart_tx &rArr; nrfx_uart_tx &rArr; tx_byte &rArr; nrf_uart_event_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_tx
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_uart_rx
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_uart_fifo.o(i.app_uart_init)
</UL>
<P><STRONG><a name="[38]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
